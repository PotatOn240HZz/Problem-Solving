{"id":478058452,"lang":"cpp","time":"1 year, 3 months","timestamp":1617873971,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/478058452/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* temp = new ListNode();\n        int carry=0;\n        if(l1->val+l2->val+carry>9)\n        {\n            temp=new ListNode(l1->val+l2->val-10+carry);\n            if(carry==0)\n                carry++;\n        }\n        else\n        {\n            temp=new ListNode(l1->val+l2->val+carry);\n            carry=0;\n        }\n        ListNode* head = temp;\n        \n        while(l1->next!=NULL && l2->next!=NULL)\n        {\n            l1=l1->next;\n            l2=l2->next;\n            if(l1->val+l2->val+carry>9)\n            {\n                temp->next=new ListNode(l1->val+l2->val+carry-10);\n                if(carry==0)\n                    carry++;\n            }\n            else\n            {\n                temp->next=new ListNode(l1->val+l2->val+carry);\n                carry=0;\n            }\n            temp=temp->next;\n        }\n        while(l1->next==NULL && l2->next!=NULL)\n        {\n            l2=l2->next;\n            if(l2->val+carry>9)\n            {\n                temp->next=new ListNode(l2->val+carry-10);\n                if(carry==0)\n                    carry++;\n            }\n            else\n            {\n                temp->next=new ListNode(l2->val+carry);\n                carry=0;\n            }\n            temp=temp->next;\n        }\n        while(l1->next!=NULL && l2->next==NULL)\n        {\n            l1=l1->next;\n            if(l1->val+carry>9)\n            {\n                temp->next=new ListNode(l1->val+carry-10);\n                if(carry==0)\n                    carry++;\n            }\n            else\n            {\n                temp->next=new ListNode(l1->val+carry);\n                carry=0;\n            }\n            temp=temp->next;\n        }\n        if(carry != 0)\n        {\n            temp->next=new ListNode(carry);\n        }\n        return head;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}