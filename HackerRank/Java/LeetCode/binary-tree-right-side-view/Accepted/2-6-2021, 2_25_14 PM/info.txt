{"id":452709821,"lang":"cpp","time":"1 year, 5 months","timestamp":1612614314,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/452709821/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>vect;\n    int max_level=-1;\n    void printright1(TreeNode* root,int level){\n       if(!root)return;\n       if(level>max_level){\n         vect.push_back(root->val);\n         max_level=level;\n       }\n       printright1(root->right,level+1);\n       printright1(root->left,level+1);\n    }\n    vector<int> rightSideView(TreeNode* root) {\n       map<int,vector<int>>m;\n       printright1(root,0); \n       return vect;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}