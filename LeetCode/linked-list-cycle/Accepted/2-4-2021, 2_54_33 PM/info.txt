{"id":451932309,"lang":"java","time":"1 year, 6 months","timestamp":1612443273,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/451932309/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"44.6 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n                Set<ListNode> nodesSeen = new HashSet<>();\n        while (head != null) {\n            if (nodesSeen.contains(head)) {\n                return true;\n            }\n            nodesSeen.add(head);\n            head = head.next;\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}