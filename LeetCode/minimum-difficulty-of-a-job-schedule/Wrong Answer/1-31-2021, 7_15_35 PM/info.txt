{"id":450199625,"lang":"cpp","time":"1 year, 6 months","timestamp":1612113335,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/450199625/","is_pending":"Not Pending","title":"Minimum Difficulty of a Job Schedule","memory":"N/A","code":"class Solution {\npublic:\n    int minDifficulty(vector<int>& jobDifficulty, int d) {\n        if(jobDifficulty.size()<d)\n            return -1;\n        if(jobDifficulty.size()==d)\n        {\n            int sum=0;\n            for(int i=0;i<jobDifficulty.size();i++)\n                sum+=jobDifficulty[i];\n            return sum;\n        }\n        if(d==1)\n        {\n            int max=jobDifficulty[0];\n            for(int i=1;i<jobDifficulty.size();i++)\n                if(max<jobDifficulty[i])\n                    max=jobDifficulty[i];\n            return max;\n        }\n        \n        vector <int> range;\n        vector <int> maxes;\n        range.resize(d);\n        maxes.resize(d+1);\n        maxes[d]=-1;\n        range[0]=0;\n        for(int i=1;i<range.size();i++)\n            range[i]=range[i-1]+1;\n        \n        while(range[0]!=jobDifficulty.size()-d)\n        {\n            for(int i=0;i<range.size();i++)\n            {\n                if(i==0)\n                {\n                    int tempMax=jobDifficulty[0];\n                    for(int j=1;j<range[i];j++)\n                            if(tempMax < jobDifficulty[j])\n                                tempMax=jobDifficulty[j];\n                    maxes[0]=tempMax;\n                }\n                else if(i == range.size()-1)\n                {\n                    int tempMax=jobDifficulty[range[i]];\n                    for(int j=range[i]+1;j<jobDifficulty.size();j++)    \n                            if(tempMax < jobDifficulty[j])\n                                tempMax=jobDifficulty[j];\n                    maxes[maxes.size()-2]=tempMax;\n                }\n                else\n                {\n                    int tempMax=jobDifficulty[range[i]];\n                    for(int j=range[i]+1;j<range[i+1];j++)\n                            if(tempMax < jobDifficulty[j])\n                                tempMax=jobDifficulty[j];\n                    maxes[i]=tempMax;\n                }\n            }\n            int sum=0;\n            for(int j=0;j<maxes.size()-1;j++)\n                sum+=maxes[j];\n            if(sum<maxes[maxes.size()-1] || maxes[maxes.size()-1]==-1)\n                maxes[maxes.size()-1]=sum;\n            \n            int temp=1;\n            for(int j=range.size()-temp;j>=0;j--)\n            {\n                if(range[j] != jobDifficulty.size()-temp)\n                {\n                    range[j]++;\n                    break;\n                }\n                temp++;\n            }\n        }\n        return maxes[maxes.size()-1];\n    }\n};\n        /*\n        int row;\n        int max;\n        int t;\n        for(int i=0;i<jobDifficulty.size()-1-d;i++)\n        {\n            int temp;\n            int tempMax=jobDifficulty[i];\n            for(int j=i;j<i+d;j++)\n            {\n                if(tempMax < jobDifficulty[j])\n                    tempMax=jobDifficulty[j];\n                temp+=jobDifficulty[j];\n            }\n            if(temp<row || i==0)\n            {\n                row=temp;\n                max=tempMax;\n                t=i;\n            }\n        }\n        ans1=max;\n        \n        \n        for(int i=0;i<t;i++)\n            int temp;\n            int tempMax=jobDifficulty[i];\n            for(int j=i;j<i+d;j++)\n            {\n                if(tempMax < jobDifficulty[j])\n                    tempMax=jobDifficulty[j];\n                temp+=jobDifficulty[j];\n            }\n            if(temp<row || i==0)\n            {\n                row=temp;\n                max=tempMax;\n                t=i;\n            }\n            */","compare_result":"11111101000000000011000000001000","title_slug":"minimum-difficulty-of-a-job-schedule"}